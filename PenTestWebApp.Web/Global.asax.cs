using System.Web;
using System.Web.Mvc;
using System.Web.Routing;
using PenTestWebApp.Web.MvcExtensions;

namespace PenTestWebApp.Web
{
    public class MvcApplication : BaseHttpApplication
    {
        public static DataStore DataStore { get; set; }

        protected override void OnApplicationStart()
        {
            DataStore = new DataStore();
            AreaRegistration.RegisterAllAreas();
            GlobalFilters.Filters.Add(new AntiForgeryTokenFilter(HttpVerbs.Post));
            //ValidationConfig.Register(NinjectConfig.Bootstrapper.Kernel);
            RouteConfig.RegisterRoutes(RouteTable.Routes);
        }

        protected override void OnError(HttpContextBase context)
        {
            var exception = context.Server.GetLastError();
            if (exception is HttpAntiForgeryException || exception is HttpRequestValidationException)
            {
                context.ClearError();
                context.Server.TransferRequest("~/badrequest.aspx");
            }
        }

        //http://www.dotnetnoob.com/2012/09/security-through-http-response-headers.html
//X-Frame-Options
//Strict-Transport-Security
//X-Content-Type-Options
//X-Download-Options
//X-XSS-Protection
//X-Content-Security-Policy / X-Content-Security-Policy-Report-Only
//X-WebKit-CSP / X-WebKit-CSP-Report-Only
    }
}
