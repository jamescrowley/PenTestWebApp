using System.Web.Mvc;

namespace PenTestWebApp.Web.MvcExtensions
{
    public class JsonValidationFilter : IActionFilter
    {
        public bool AlwaysInvokeAction { get; set; }

        public void OnActionExecuting(ActionExecutingContext filterContext)
        {
            var modelState = GetModelState(filterContext.Controller);
            if (ModelHasErrors(modelState) && !this.AlwaysInvokeAction)
                filterContext.Result = new JsonModelErrorResult(modelState);
        }

        public void OnActionExecuted(ActionExecutedContext filterContext)
        {
            var modelState = GetModelState(filterContext.Controller);
            if (ModelHasErrors(modelState) && ResultIsEmpty(filterContext.Result))
                filterContext.Result = new JsonModelErrorResult(modelState);
        }

        private static ModelStateDictionary GetModelState(ControllerBase controller)
        {
            return controller == null || controller.ViewData == null ? null : controller.ViewData.ModelState;
        }

        private static bool ModelHasErrors(ModelStateDictionary modelState)
        {
            return null != modelState && !modelState.IsValid;
        }

        private static bool ResultIsEmpty(ActionResult result)
        {
            if (result == null)
                return true;

            if (result is EmptyResult)
                return true;

            var json = result as JsonResult;
            if (json != null && json.Data == null)
                return true;

            var content = result as ContentResult;
            if (null != content && string.IsNullOrEmpty(content.Content))
                return true;

            return false;
        }
    }
}