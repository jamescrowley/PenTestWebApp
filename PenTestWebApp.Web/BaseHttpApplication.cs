using System;
using System.Web;

namespace PenTestWebApp.Web
{
    public abstract class BaseHttpApplication : HttpApplication
    {
        public override void Init()
        {
            base.Init();
            AuthenticateRequest += (EventHandler)((sender, e) => OnAuthenticateRequest(new HttpContextWrapper(((HttpApplication)sender).Context)));
            PostAuthenticateRequest += (EventHandler)((sender, e) => OnPostAuthenticateRequest(new HttpContextWrapper(((HttpApplication)sender).Context)));
            PostRequestHandlerExecute += (EventHandler)((sender, e) => OnPostRequestHandlerExecute(new HttpContextWrapper(((HttpApplication)sender).Context)));
            BeginRequest += (EventHandler)((sender, e) => OnBeginRequest(new HttpContextWrapper(((HttpApplication)sender).Context)));
            Error += (EventHandler)((sender, e) => OnError(new HttpContextWrapper(((HttpApplication)sender).Context)));
            EndRequest += (EventHandler)((sender, e) => OnEndRequest(new HttpContextWrapper(((HttpApplication)sender).Context)));
        }

        protected void Application_Start(object sender, EventArgs e)
        {
            OnApplicationStart();
        }

        protected virtual void OnApplicationStart()
        {
        }

        protected virtual void OnPostRequestHandlerExecute(HttpContextBase context)
        {
        }

        protected virtual void OnAuthenticateRequest(HttpContextBase context)
        {
        }

        protected virtual void OnPostAuthenticateRequest(HttpContextBase context)
        {
        }

        protected virtual void OnBeginRequest(HttpContextBase context)
        {
        }

        protected virtual void OnError(HttpContextBase context)
        {
        }

        protected virtual void OnEndRequest(HttpContextBase context)
        {
        }

        protected virtual void RedirectToMvcPath(HttpContextBase context, int statusCode, string path)
        {
            context.Server.TransferRequest(path, false);
            context.Response.StatusCode = statusCode;
            context.Response.TrySkipIisCustomErrors = true;
        }
    }
}