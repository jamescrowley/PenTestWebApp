using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using PenTest.Web.DataModel;
using PenTest.Web.MvcExtensions;

namespace PenTest.Web.Controllers
{
    public class DocumentController : Controller
    {
        public ActionResult Index()
        {
            return View(MvcApplication.DataStore.Documents.ToList());
        }

        public ActionResult Download(Guid id)
        {
            var document = MvcApplication.DataStore.Documents.First(t => t.Id == id);
            return new FileContentDownloadResult(document.FileBytes, document.MimeType) //CustomFileContentResult
            {
                //1. Always set the content disposition
                //FileDownloadName = document.FileName
            };
            //X-Download-Options: noopen
        }

        static ISet<string> AllowedExtensions = new HashSet<string>(StringComparer.OrdinalIgnoreCase) {".txt", ".htm"};

        static ISet<string> AllowedMimeTypes = new HashSet<string>(StringComparer.OrdinalIgnoreCase) { "text/plain", "application/zip", "application/x-zip-compressed" };

        [HttpPost]
        public ActionResult Index(HttpPostedFileBase file, string name)
        {
            //if (AllowedExtensions.Contains(Path.GetExtension(file.FileName)))
            if (AllowedMimeTypes.Contains(file.ContentType))
            {
                MvcApplication.DataStore.Documents.Add(new Document
                {
                    Id = Guid.NewGuid(),
                    FileBytes = file.InputStream.ReadAllBytes(),
                    MimeType = file.ContentType,
                    FileName = file.FileName // no!
                });
            }
            else
            {
                ModelState.AddModelError(string.Empty,"Invalid document type");
            }

            return Index();
        }
	}
}